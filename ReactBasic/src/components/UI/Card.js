//Card.js : 일반적으로 웹 개발시에 둥근 모서리, 옅은 그림자와 같은 요소들이 있는 모양을 일컬음.

//이와 같은 형태를 "컴포지션" 혹은 "래핑"한다고 한다.
//왜 이렇게 하는 걸까?
//css 파일에서 이 별도의 래퍼 컴포넌트로 일부 중복되는 코드를 추출할 수 있다.
//그리고 단지 중복된 코드 뿐만 아니라 html코드와 jsx코드 그리고 <div> 등도 추출할 수 있다.
//추출이 가능하다는 것은 수많은 코드 중복을 피할 수 있게 해주고 다른 컴포넌트를 깔끔하게 유지할 수 있게 해준다.

import "./Card.css";

const Card = (props) => {
  //사용자 지정 컴포넌트에서 className을 사용하려면 해당 컴포넌트 안에서 동적으로 변수를 주입해야 한다.
  //밖에서 className으로 받는 것들은 문자열로 변환되어 동적으로 해당 div를 가리킨다.
  //css파일이 .card에 해당되는 모든 클래스를 가리키므로 밑과 같이 변수명을 설정한 것.
  //이렇게하면 여러개의 클래스를 한꺼번에 가리킬 수 있어 획기적으로 코드중복이 줄어든다.
  const classes = "card " + props.className;
  return (
    <div className={classes}>
      {/* props.children은 예약어이다. 따로 설정해주지 않아도 되며
    사용자 지정 컴포넌트의 태그를 열고닫는 사이에 위치한다.
    합성(컴포지션)을 하기 위해서는 필수로 사용된다. 안쓰면안된다. */}
      {props.children}
    </div>
  );
};

export default Card;
